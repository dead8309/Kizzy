buildscript {
    ext {
        compose_version = '1.4.0-alpha01'
        kotlinVersion = '1.8.0'
        ktxVersion = "1.8.0"
        material3Version = "1.0.1"
        ktxLifecycleVersion = "2.5.1"
        activityComposeVersion = "1.5.1"
        constraintLayoutVersion = "2.1.4"
        androidxMaterialVersion = '1.8.0'
        junitVersion = "4.13.2"
        composeNavigationVersion = "2.5.1"
        accompanistVersion = "0.25.1"
        gsonVersion = "2.9.1"
        glideVersion = "1.6.1"
        utilcodeVersion = "1.31.0"
        websocketVersion = "1.5.3"
        okhttpVersion = "4.9.3"
        accompanistPermissionVersion = "0.26.2-beta"
        retrofitVersion = "2.9.0"
        hiltVersion = "2.44"
        mmkvVersion = "1.2.14"
        coilVersion = "2.1.0"
    }

    ext {
        //Core
        coreKtx = "androidx.core:core-ktx:${ktxVersion}"
        material3 = "androidx.compose.material3:material3:${material3Version}"
        windowSizeClass = "androidx.compose.material3:material3-window-size-class:${material3Version}"
        lifecycleRuntimeKtx = "androidx.lifecycle:lifecycle-runtime-ktx:${ktxLifecycleVersion}"
        constraintLayout = "androidx.constraintlayout:constraintlayout:${constraintLayoutVersion}"
        cardView = "androidx.cardview:cardview:1.0.0"
        androidxMaterial = "com.google.android.material:material:${androidxMaterialVersion}"
        junit = "junit:junit:${junitVersion}"
        junitExt = "androidx.test.ext:junit:1.1.3"
        junitEspressoCore = "androidx.test.espresso:espresso-core:3.4.0"
        composeActivity = "androidx.activity:activity-compose:${activityComposeVersion}"
        Hilt = "com.google.dagger:hilt-android:${hiltVersion}"
        HiltCompiler = "com.google.dagger:hilt-android-compiler:${hiltVersion}"
        AppCompat = "androidx.appcompat:appcompat:1.7.0-alpha01"

        //Compose
        composeUi = "androidx.compose.ui:ui:${compose_version}"
        composeToolingPreview ="androidx.compose.ui:ui-tooling-preview:${compose_version}"
        junit4 = "androidx.compose.ui:ui-test-junit4:${compose_version}"
        uiTooling = "androidx.compose.ui:ui-tooling:${compose_version}"
        testManifest = "androidx.compose.ui:ui-test-manifest:${compose_version}"
        materialIconsExtended = "androidx.compose.material:material-icons-extended:${compose_version}"
        composeNavigation = "androidx.navigation:navigation-compose:${composeNavigationVersion}"

        //Accompanist
        accompanistPermission = "com.google.accompanist:accompanist-permissions:${accompanistPermissionVersion}"
        accompanistAnimation ="com.google.accompanist:accompanist-navigation-animation:${accompanistVersion}"
        accompanistSystemUiController = "com.google.accompanist:accompanist-systemuicontroller:${accompanistVersion}"
        accompanistFlowLayout = "com.google.accompanist:accompanist-flowlayout:0.28.0"

        //Utilities
        googleGson = "com.google.code.gson:gson:${gsonVersion}"
        glide = "com.github.skydoves:landscapist-glide:${glideVersion}"
        blankjUtil = "com.blankj:utilcodex:${utilcodeVersion}"
        javaWebsocket = "org.java-websocket:Java-WebSocket:${websocketVersion}"
        okhttp =  "com.squareup.okhttp3:okhttp:${okhttpVersion}"
        okhttpInterceptor =  "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
        crashX = 'com.github.TutorialsAndroid:crashx:v6.0.19'
        retrofit = "com.squareup.retrofit2:retrofit:${retrofitVersion}"
        retrofitGsonConverter = "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
        MMKV = "com.tencent:mmkv:${mmkvVersion}"
        coilCompose = "io.coil-kt:coil-compose:${coilVersion}"
        coilSvg = "io.coil-kt:coil-svg:${coilVersion}"
        androidSVG = "com.caverock:androidsvg-aar:1.4"
    }
    dependencies {
        classpath("com.google.dagger:hilt-android-gradle-plugin:2.44")
    }
}
plugins {
    id 'com.android.application' version '7.4.0' apply false
    id 'com.android.library' version '7.4.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.0' apply false
}

task clean(type: Delete) {
    delete rootProject.buildDir
}